pipeline {
  agent any

  environment {
    DOCKER_IMAGE = "pushparaj1994/myproject:${BUILD_NUMBER}"
    REGISTRY_CREDENTIALS = credentials('docker')
  }

  stages {
    stage('Checkout') {
      steps {
        echo 'Checking out the repository...'
        git branch: 'main', url: 'https://github.com/Pushparaj1611/Jenkins-Zero-To-Hero.git'
      }
    }

    stage('Build and Test') {
      steps {
        dir('java-maven-sonar-argocd-helm-k8s/spring-boot-app') {
          sh 'ls -ltr'
          sh 'mvn clean package'
        }
      }
    }

    stage('SonarQube Analysis') {
      steps {
        script {
          withSonarQubeEnv(credentialsId: 'sonarqube') {
            dir('java-maven-sonar-argocd-helm-k8s/spring-boot-app') {
              sh 'mvn sonar:sonar'
            }
          }
        }
      }
    }

    stage('Build and Push Docker Image') {
      steps {
        script {
          dir('java-maven-sonar-argocd-helm-k8s/spring-boot-app') {
            sh 'docker build -t ${DOCKER_IMAGE} .'
          }
          def dockerImage = docker.image("${DOCKER_IMAGE}")
          docker.withRegistry('https://index.docker.io/v1/', REGISTRY_CREDENTIALS) {
            dockerImage.push()
          }
        }
      }
    }
  }
}
