pipeline {
  agent any

 

  stages {
    stage('Checkout') {
      steps {
        echo 'Checking out the repository...'
        git branch: 'main', url: 'https://github.com/Pushparaj1611/Jenkins-Zero-To-Hero.git'
      }
    }

    stage('Build and Test') {
      steps {
        dir('java-maven-sonar-argocd-helm-k8s/spring-boot-app') {
          sh 'ls -ltr'
          sh 'mvn clean package'
        }
      }
    }

    stage('SonarQube Analysis') {
      steps {
        script {
          withSonarQubeEnv(credentialsId: 'sonarqube') {
            dir('java-maven-sonar-argocd-helm-k8s/spring-boot-app') {
              sh 'mvn sonar:sonar'
            }
          }
        }
      }
    }
    stage('Build and Push Docker Image') {
      environment {
        DOCKER_IMAGE = "pushparaj1994/myproject:${BUILD_NUMBER}"
        // DOCKERFILE_LOCATION = "java-maven-sonar-argocd-helm-k8s/spring-boot-app/Dockerfile"
        REGISTRY_CREDENTIALS = credentials('docker')
      }
      steps {
        script {
            sh 'cd java-maven-sonar-argocd-helm-k8s/spring-boot-app && docker build -t ${DOCKER_IMAGE} .'
            def dockerImage = docker.image("${DOCKER_IMAGE}")
            docker.withRegistry('https://index.docker.io/v1/', "docker") {
                dockerImage.push()
            }
        }
      }
    }
  }
}
